.jumbotron.text-center
	h1 Examine Browser
	
	p {{tagline}}

.row
	.col-md-4
		h2 1. Select string options:

		p Select the criteria you want to choose from:

		form.form-horizontal#radioForm
			form-group
				.radio
					label#browserLabel
						input(type="radio", name="radios", value="")#browserRadio
						| Browser
			form-group
				.radio
					label#adBlockerLabel 
						input(type="radio", name="radios", value="")#adBlockerRadio
						| Ad Blocker
			form-group
				.radio
					label#pluginsLabel 
						input(type="radio", name="radios", value="")#pluginsRadio
						| Plugins
			form-group
				.radio
					label#languageLabel 
						input(type="radio", name="radios", value="")#languageRadio
						| Language
			form-group
				.radio
					label#touchLabel 
						input(type="radio", name="radios", value="")#touchRadio
						| Touch Support
			form-group
				.radio
					label#otherLabel 
						input(type="radio", name="radios", value="")#otherRadio
						| Other variable (whatever you want it to be)

	.col-md-4
		h2 2. Generate keys:

		button.btn.btn-primary(type="button", id="keysButton", onclick="getKeys()", disabled="disabled", analytics-on="click", analytics-event="genKeys") Generate!

		#keyInfo
			p
			p 
				b Public 
				| Key is:
			p#publicKey(style="font-family: monospace;") X
			p
			p
				b Private 
				| Key is:
			p#privateKey(style="font-family: monospace;") X

	.col-md-4
		h2 3. Generate code:

		button.btn.btn-primary(type="button", id="codeButton", onclick="genCode()", disabled="disabled", analytics-on="click", analytics-event="genCode") Generate!
		p
		p(id="finalCode", style="font-family: monospace; white-space: pre") Final Code Here

script.
	$("#keyInfo").hide();

	$("#browserLabel").append(" (e.g. this browser returns \"" + RapporExamine.getBrowser() + "\")");
	RapporExamine.getAdBlock(adBlockSuccess, adBlockFailure);
	$("#pluginsLabel").append(" (e.g. this browser returns \"[" + RapporExamine.getPlugins() + "]\")");
	$("#languageLabel").append(" (e.g. this browser returns \"" + RapporExamine.getLanguage() + "\")");
	$("#touchLabel").append(" (e.g. this browser returns \"" + RapporExamine.getTouchSupport() + "\")");

	function adBlockSuccess() {
		$("#adBlockerLabel").append(" (e.g. this browser returns \"true\")");
	}

	function adBlockFailure() {
		$("#adBlockerLabel").append(" (e.g. this browser returns \"true\")");
	}

	$('input[name=radios]').change(function(){
	    $("#keysButton").removeAttr("disabled");
	    $("#keysButton").focus();
	});

	function getKeys() {
		$("#keysButton").attr("disabled", "disabled");
		$("#codeButton").removeAttr("disabled");

		$.post( "/api/v1/credentials", function( data ) {
			//- console.log(data.message);
			console.log(data);
			$("#publicKey").text(data.publicKey);
			$("#privateKey").text(data.privateKey);
			$("#keyInfo").show();
			$("#codeButton").focus();
		});
	}

	function genCode() {
		$("#codeButton").attr("disabled", "disabled");

		templateString = getOperationString();
		$("#finalCode").text(templateString);
	}

	function getOperationString() {
		//- console.log($('input[name=radios]:checked').attr("id"));

		var checked = $('input[name=radios]:checked').attr("id");
		var finalStr = `<script src="rappor.js">`

		if (checked != "otherRadio")
			finalStr += `\n<script src="rappor-examine.js">`;

		finalStr += `\n\nr = new window.Rappor("` + $("#publicKey").text() + `");\n`		

		switch(checked) {
			case "browserRadio":
				finalStr += `r.send(RapporExamine.getBrowser());\n`;
				break;
			case "adBlockerRadio":
				finalStr += `RapporExamine.getAdBlock(r.sendTrue(), r.sendFalse()));\n`;
				break;
			case "pluginsRadio":
				finalStr += `r.send(RapporExamine.getPlugins());\n`;
				break;
			case "languageRadio":
				finalStr += `r.send(RapporExamine.getLanguage());\n`;
				break;
			case "touchRadio":
				finalStr += `r.send(RapporExamine.getTouchSupport());\n`;
				break;
			case "otherRadio":
				finalStr += `r.send(<your_variable_here>);\n`;
				break;
			default:
				break;
		}

		return finalStr;
	}